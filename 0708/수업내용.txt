Elastic Stack의 Flow
    Pipleline 구성이 가능

        beats >> logstash >> elasticsearch << kibana

        CRUD
        데이터 저장 : POST
        데이터 검색 : GET
        데이터 수정 : PUT
        데이터 삭제 : DELETE

Elasticsearch가 빠른 사유
    - 역색인(inverted index) 개념이 도입되었기 때문
    - 저장된 데이터 검색이 일반 DB보다 훨씬 빠르게 구성된 솔루션 
        - 저장구조 : JSON
    - 예시 : oracle db용도 
        - 데이터를 무결하게 영구적으로 저장해주는 솔루션
        - 역색인 기능은 일반 RDBMS엔 없음

역색인이란?
    - 종이책의 마지막 페이지에서 제공하는 색인 페이지와 흡사한 데이터 구조
    - 예시
        - '검색엔진'이란 단어가 포함된 모든 문서를 찾아라?
            - 일반적인 구조(RDBMS의 경우)
                : 처음부터 끝까지 모든 문서를 읽어야만 원하는 결과를 얻을 수 있음

            - (***) 역색인 구조(Elasticsearch인 경우)
                - 해당 단어만 찾으면 단어가 포함된 모든 문서의 위치를 알 수 있음
                - 빠른 검색이 가능

            - 용어 
                1. **Term** 이란? 추출된 각 키워드 의미
                2. 데이터가 저장되었다 = **index** 되었습니다!!

역색인 구조 - 예시를 통해 이해하기
    - 역색인 단계
        1단계
        2단계 : 토큰화된 단어에 대해 문서 상의 위치와 출력 빈도 등의 정보를 확인
            데이터 나눌때 default는 '여백'임

검색 시스템 이해하기
    - 검색엔진?
    - 검색시스템?
        : 사용자가 원하는 검색어에 대한 결과를 제공
    - 검색서비스?
        : 검색 엔진을 기반으로 구축한 검색 시스템을 활용해 검색 결과를 서비스로 제공

관계형 데이터 베이스와의 차이점 이해하기
    - 검색엔진
    - 관계형 데이터 베이스(oracle)

